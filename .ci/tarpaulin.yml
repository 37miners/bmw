steps:
- script: |
   sudo apt-get install gnuplot
   sudo apt-get update -yqq
   sudo apt-get install -yqq --no-install-recommends libncursesw5-dev tor libssl-dev
   cargo install cargo-tarpaulin
   git clone https://anything:$(github_pat)@github.com/37miners/bmw.git bmw_new 
   cd bmw_new
   git config user.name "Pipelines-Bot"
   git checkout main
   cargo tarpaulin --all > /tmp/tarpaulin.out
   last=$( tail -n 1 /tmp/tarpaulin.out )
   spl=( $last )
   str=${spl[0]}
   IFS='%';
   read -rasplitIFS<<< "$str"
   cur=${splitIFS[0]}
   timestamp=$(date +%s)
   IFS=' ';
   last_tarpaulin_summary=$( tail -n 1 docs/tarpaulin_summary.txt)
   last_tarpaulin_summary_split=( $last_tarpaulin_summary )
   # only update at most once per hour
   limit_l=`expr ${last_tarpaulin_summary_split[0]} + 3600`
   echo "limit=$limit_l,timestamp=$timestamp"
   if [ $limit_l -le $timestamp ]
   then
        echo "updating"
        echo "$timestamp ${splitIFS[0]}" >> docs/tarpaulin_summary.txt

        # copy tarpaulin output into template
        export tarpaulin_output=`cat /tmp/tarpaulin.out`;
        perl -pi -e 's/REPLACETARPAULINOUTPUT/$ENV{tarpaulin_output}/g' docs/code_coverage.html.template

        # read in data from summary
        entries=`cat docs/tarpaulin_summary.txt`;
        declare -a timestamps;
        declare -a values;
        i=0;
        rm -f /tmp/timestamps
        rm -f /tmp/values
        for entry in $entries
        do
             if [ $(expr $i % 2) == 0 ]
             then
                  echo "format_date($entry * 1000 )," >> /tmp/timestamps
             else
                  echo "$entry," >> /tmp/values
             fi
             let i=i+1;
        done

        # update our template with real values
        export coverage=`cat /tmp/values`;
        perl -pi -e 's/REPLACECOVERAGE/$ENV{coverage}/g' docs/code_coverage.html.template
        export timestampsv=`cat /tmp/timestamps`;
        perl -pi -e 's/REPLACETIMESTAMP/$ENV{timestampsv}/g' docs/code_coverage.html.template
        cp docs/code_coverage.html.template docs/code_coverage.html;
        git checkout docs/docs/code_coverage.html.template

        git add --all
        git commit -m"Pipelines-Bot: Updated site Source Version is $(Build.SourceVersion)";
        git push https://$(github_pat)@github.com/37miners/bmw.git
   else
        echo "not updating too recent"
   fi

  displayName: 'Code Coverage'
  condition: succeeded()
