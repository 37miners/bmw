window.SIDEBAR_ITEMS = {"constant":[["READ_SLAB_DATA_SIZE","The size of the data which is stored in read slabs. This data is followed by 4 bytes which is a pointer to the next slab in the list."]],"fn":[["create_listeners","Create listeners for use with the [`crate::ServerConnection`] struct. This function crates an array of handles which can be used to construct a [`crate::ServerConnection`] object. `size` is the size of the array. It must be equal to the number of threads that the [`crate::EventHandler`] has configured. `addr` is the socketaddress to bind to. (For example: 127.0.0.1:80 or 0.0.0.0:443.). `listen_size` is the size of the listener backlog for this tcp/ip connection. `reuse_port` specifies whether or not to reuse the port on a per thread basis for this connection. This is only available on linux and will be ignored on other platforms."]],"macro":[["eventhandler","Build an [`crate::EventHandler`] instance. See module level documentation for examples. Optionally, an [`crate::EventHandlerConfig`] may be specified. If none is specified, the default values are used."]],"struct":[["Builder","The structure that builds eventhandlers."],["ClientConnection","A struct which specifies a client connection."],["ConnectionData","A struct which is passed to several of the callbacks in [`crate::EventHandler`]. It provides information on the connection from which data is read."],["EventHandlerConfig","The configuration for the [`crate::EventHandler`]."],["ServerConnection","A struct which specifies a server connection."],["ThreadContext","A thread context which is passed to the callbacks specified by a [`crate::EventHandler`]."],["TlsClientConfig","TlsClientConfig specifies the configuration for a tls client."],["TlsServerConfig","TlsServerConfig specifies the configuration for a tls server."],["WriteHandle","A struct which is used to write to a connection."]],"trait":[["ConnData","This trait which is implemented by [`crate::ConnectionData`]. This trait is used to interact with a connection."],["EventHandler","This trait defines the behaviour of an eventhandler. See the module level documentation for examples."]]};